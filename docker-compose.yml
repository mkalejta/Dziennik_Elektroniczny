version: "3.8"

services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: ["mongod", "--bind_ip_all"]
    volumes:
      - mongo_data:/data/db
      - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - gradebook-net
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    networks:
      - gradebook-net
    restart: unless-stopped

  users-service:
    build:
      context: ./services/users-service
      dockerfile: Dockerfile
    container_name: users-service
    ports:
      - "${USERS_SERVICE_PORT:-8001}:8001"
    environment:
      PORT_USER_SERVICE: ${USERS_SERVICE_PORT:-8001}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - mongodb
      - postgres
    networks:
      - gradebook-net
    restart: unless-stopped

  grades-service:
    build:
      context: ./services/grades-service
      dockerfile: Dockerfile
    container_name: grades-service
    ports:
      - "${GRADES_SERVICE_PORT:-8001}:8001"
    environment:
      PORT_USER_SERVICE: ${GRADES_SERVICE_PORT:-8001}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - mongodb
      - postgres
    networks:
      - gradebook-net
    restart: unless-stopped
  
  subjects-service:
    build:
      context: ./services/subjects-service
      dockerfile: Dockerfile
    container_name: subjects-service
    ports:
      - "${SUBJECTS_SERVICE_PORT:-8003}:8003"
    environment:
      PORT_SUBJECT_SERVICE: ${SUBJECTS_SERVICE_PORT:-8003}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - mongodb
      - postgres
    networks:
      - gradebook-net
    restart: unless-stopped

  attendance-service:
    build:
      context: ./services/attendance-service
      dockerfile: Dockerfile
    container_name: attendance-service
    ports:
      - "${ATTENDANCE_SERVICE_PORT:-8004}:8004"
    environment:
      PORT_ATTENDANCE_SERVICE: ${ATTENDANCE_SERVICE_PORT:-8004}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - mongodb
      - postgres
    networks:
      - gradebook-net
    restart: unless-stopped

  timetable-service:
    build:
      context: ./services/timetable-service
      dockerfile: Dockerfile
    container_name: timetable-service
    ports:
      - "${TIMETABLE_SERVICE_PORT:-8005}:8005"
    environment:
      PORT_TIMETABLE_SERVICE: ${TIMETABLE_SERVICE_PORT:-8005}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - mongodb
      - postgres
    networks:
      - gradebook-net
    restart: unless-stopped

  messages-service:
    build:
      context: ./services/messages-service
      dockerfile: Dockerfile
    container_name: messages-service
    ports:
      - "${MESSAGES_SERVICE_PORT:-8006}:8006"
    environment:
      PORT_MESSAGES_SERVICE: ${MESSAGES_SERVICE_PORT:-8006}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - mongodb
      - postgres
    networks:
      - gradebook-net
    restart: unless-stopped

networks:
  gradebook-net:

volumes:
  mongo_data:
  postgres_data:
